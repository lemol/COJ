using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using NUnit.Framework;
using Lemolsoft.Practicas.Coj.CojTests.NUnit;

namespace Lemolsoft.Practicas.Coj.Problemas.Tests
{
    [TestFixture]
    public class P1108Test : ProblemaTest<P1108>
    {

        #region Testes Executivos
        
        [Test]
        public void Teste_1()
        {

            NovaEntrada(@"5
2
3
1
2
1");

/*
 * 1
 * 3
 * 2
 * 2
 * 1
 * 
 * 1
 * 1
 * 2
 * 2
 * 3
 */

            Problema.Executar();

            ExpectSaida(@"2");

        }

        #endregion

        #region Teste Proposto

        [Test]
        public void Teste_Proposto()
        {

            NovaEntrada(

@"9
2
2
1
3
3
3
2
3
1"

);
/*4
 * 
 * 1
 * 2
 * 2
 * 3
 * 3
 * 3
 * 2
 * 3
 * 1
 * 
 * 1
 * 1
 * 2
 * 3
 * 3
 * 3
 * 2
 * 3
 * 2
 * 
 * 1
 * 1
 * 2
 * 2
 * 3
 * 3
 * 3
 * 2
 * 
 * 
 * 
 * 1
 * 2
 * 2
 * 3
 * 3
 * 3
 * 2
 * 3
 * 1
 * 
 * 1
 * 2
 * 2
 * 2
 * 3
 * 3
 * 3
 * 3
 * 1
 * 
 * 1
 * 1
 * 2
 * 2
 * 3
 * 3
 * 3
 * 3
 * 2
 * 
 * 1
 * 1
 * 2
 * 2
 * 2
 * 3
 * 3
 * 3
 * 3
*/

            Problema.Executar();

            ExpectSaida(@"4");

        }

        [Test]
        public void Teste_Proposto_2()
        {

            NovaEntrada(@"999
2
1
3
3
3
3
1
1
1
1
3
2
1
1
3
1
2
1
2
2
2
1
1
3
3
3
2
2
2
3
1
3
2
3
1
1
1
1
3
1
2
2
3
2
1
2
2
3
1
2
3
2
3
2
3
1
1
1
3
1
3
1
2
2
1
2
3
3
1
1
3
3
2
3
1
3
2
2
3
2
3
1
3
3
2
3
2
2
3
3
3
1
1
1
3
1
1
1
3
2
2
2
3
3
3
1
1
3
2
3
3
3
3
3
2
3
1
3
3
2
3
3
2
3
1
2
1
3
3
1
3
1
1
3
3
1
1
3
2
3
1
3
2
3
2
3
2
3
1
2
1
3
1
3
3
3
2
3
2
2
3
3
1
3
3
2
3
2
3
2
1
2
3
3
1
2
2
1
3
1
1
1
1
2
2
2
1
1
1
2
3
1
1
1
2
1
2
2
2
1
3
2
1
2
2
3
1
2
2
3
3
3
3
1
1
1
1
2
2
3
3
1
1
3
1
1
3
3
2
3
3
2
1
1
3
2
2
1
3
2
2
2
3
2
1
3
1
3
1
2
1
2
3
2
3
3
2
3
3
3
2
3
3
3
3
3
1
3
1
3
1
1
2
1
2
1
1
2
2
1
2
3
1
3
2
3
3
1
1
3
2
1
2
1
2
2
3
2
3
2
2
2
1
1
1
2
1
1
2
1
1
1
2
1
2
2
3
1
2
1
3
3
1
1
2
2
1
2
1
2
1
2
3
2
1
3
3
3
3
1
2
1
3
2
1
3
1
1
2
1
1
3
1
1
3
1
1
2
2
3
1
3
1
2
3
3
2
1
2
2
3
2
2
2
1
2
2
3
1
3
2
3
3
1
1
1
3
2
2
1
3
3
1
3
1
2
2
3
1
2
2
1
1
1
2
3
1
1
3
3
1
3
2
1
3
2
3
1
3
3
1
1
2
2
1
3
3
3
2
2
1
1
1
2
3
1
1
2
2
1
3
3
2
3
2
3
3
1
3
1
2
3
1
1
2
1
3
2
3
3
3
2
3
1
3
3
1
1
1
1
1
3
1
3
2
1
2
1
3
3
3
2
1
3
2
3
1
1
3
2
2
2
2
3
1
2
1
1
2
2
1
2
2
3
3
1
2
2
2
2
2
2
3
3
2
2
3
3
3
1
2
1
3
2
1
1
2
1
1
2
1
3
3
3
2
1
2
2
1
3
2
3
1
1
2
3
2
3
2
2
3
2
2
2
3
2
3
3
1
1
1
1
3
1
3
1
1
2
2
1
1
2
2
3
1
3
2
2
3
1
2
2
1
1
3
1
3
3
1
1
1
1
2
1
2
2
3
2
1
3
1
2
3
3
2
2
2
2
1
1
2
1
3
3
3
2
1
1
2
2
1
2
2
1
3
3
3
1
2
1
1
1
2
2
2
1
2
2
2
1
2
2
1
3
1
2
3
2
1
3
3
2
1
1
2
2
1
3
3
1
1
1
3
3
3
2
3
3
2
1
2
3
3
2
2
3
2
1
3
1
2
3
1
1
3
3
2
3
3
1
2
1
3
3
2
1
1
2
1
2
2
2
3
3
3
1
3
1
3
2
1
1
2
3
3
1
2
3
2
3
3
3
1
1
1
2
2
3
1
1
1
3
3
1
1
2
3
1
3
2
3
2
1
3
2
2
3
2
1
1
3
3
1
3
3
3
2
1
2
3
3
2
1
3
2
2
3
1
3
1
2
3
3
1
3
1
3
3
2
3
2
3
3
3
3
1
2
1
2
3
1
3
1
2
2
3
3
2
3
1
2
2
3
2
1
2
1
1
3
1
2
1
1
1
3
2
3
1
2
2
2
2
1
2
1
2
2
1
2
2
2
3
2
1
1
2
1
3
2
2
3
1
1
3
1
3
1
1
3
2
1
1
3
1
1
3
2
2
3
3
2
3
3
3
1
3
2
1
1
3
3
2
1
1
2
1
2
2
2
1
3
1
3
1
1
1
2
3
2
1
2
1
1
1
2
1
2
2
1
2
2
3
1
2
2
1
3
1
2
2
1
2
2
1
1
1
3
2
2
2
1
1
1
1
3
2
2
2
3
1
2
3
2
2
2
1
2
2
3
1
1
1
2
2
2
3
1
2
3
1
3
2
3
3
1
2
3
2
3
2
2
1
1
2
2
3
1
3
2
2
3
3
2
2
1
2
1
1
1
3
3
1
2
1
3
1
2
1
3
3
2
1
1
3
2
2
2
3
1");

            Problema.Executar();

            ExpectSaida(@"341");

        }

        #endregion

    }
}
